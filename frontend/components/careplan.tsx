/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/7T3JhkOGAZU
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import Link from "next/link"
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Accordion, AccordionItem, AccordionTrigger, AccordionContent } from "@/components/ui/accordion"
import styles from './careplan.module.css'

export default function Careplan() {
  return (
    <div className={styles.careContainer}>
    <div className="flex min-h-screen">
      <aside className="w-64 bg-white border-r">
        <div className="p-4">
          <div className="flex items-center gap-2">
            <LogInIcon className="h-6 w-6" />
            <span className="text-xl font-bold">CareTriangle</span>
          </div>
        </div>
        <nav className="p-4 space-y-4">
          <Link href="#" className="flex items-center gap-2 text-gray-700" prefetch={false}>
            <LayoutDashboardIcon className="h-6 w-6" />
            <span>Dashboard</span>
          </Link>
          <Link href="#" className="flex items-center gap-2 text-white bg-pink-500 rounded-md p-2" prefetch={false}>
            <GanttChartIcon className="h-6 w-6" />
            <span>Care Plan</span>
          </Link>
          <Link href="#" className="flex items-center gap-2 text-gray-700" prefetch={false}>
            <GroupIcon className="h-6 w-6" />
            <span>Community</span>
          </Link>
          <Link href="#" className="flex items-center gap-2 text-gray-700" prefetch={false}>
            <BugIcon className="h-6 w-6" />
            <span>Symptoms</span>
          </Link>
          <Link href="#" className="flex items-center gap-2 text-gray-700" prefetch={false}>
            <SettingsIcon className="h-6 w-6" />
            <span>Settings</span>
          </Link>
          <Link href="#" className="flex items-center gap-2 text-gray-700" prefetch={false}>
            <LogOutIcon className="h-6 w-6" />
            <span>Sign Out</span>
          </Link>
        </nav>
        <div className="p-4 mt-auto">
          <Card className="bg-teal-500 text-white">
            <CardContent>
              <h3 className="text-lg font-bold">Talk with Eleanor</h3>
              <p>Your own personal nurse. Press to start talking or typing.</p>
              <Button className="mt-2 bg-white text-teal-500">Connect</Button>
            </CardContent>
          </Card>
        </div>
      </aside>
      <main className="flex-1 bg-gray-100">
        <header className="flex items-center justify-between p-4 bg-white border-b">
          <h1 className="text-2xl font-bold">Care Plan</h1>
          <div className="flex items-center gap-4">
            <Input type="search" placeholder="Search here..." className="w-64" />
            <Button variant="ghost" className="flex items-center gap-2">
              <ScalingIcon className="h-6 w-6" />
              <span>Normal</span>
            </Button>
            <Button variant="ghost" className="flex items-center gap-2">
              <BellIcon className="h-6 w-6" />
            </Button>
            <Avatar>
              <AvatarImage src="/placeholder-user.jpg" />
              <AvatarFallback>JC</AvatarFallback>
            </Avatar>
            <div>
              <p>John</p>
              <p className="text-sm text-gray-500">Carer</p>
            </div>
          </div>
        </header>
        <section className="p-4">
          <Accordion type="single" collapsible>
            <AccordionItem value="item-1">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Behavioural and Emotional Support</h3>
              </AccordionTrigger>
              <AccordionContent>
                <p>Gently wake Margaret and assist her with personal hygiene (brushing teeth, washing face, etc.)</p>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-2">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Safety Measures</h3>
              </AccordionTrigger>
              <AccordionContent>
                <ul>
                  <li>- Prepare and serve breakfast (oatmeal, fruit, and a cup of tea)</li>
                  <li>- Administer medication</li>
                </ul>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-3">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Nutritional Plan</h3>
              </AccordionTrigger>
              <AccordionContent>
                <p>Light exercise ðŸŒž How about a walk? Margaret likes this form of exercise Explore Routes Nearby</p>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-4">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Exercise and Physical Activity</h3>
              </AccordionTrigger>
              <AccordionContent>
                <p>Engage in cognitive activity ðŸŒž How about a puzzle?</p>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-5">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Cognitive and Social Activities</h3>
              </AccordionTrigger>
              <AccordionContent>
                <p>Serve lunch (balanced meal with vegetables, lean protein), administer medication and eat together</p>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-6">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Caregiver Support</h3>
              </AccordionTrigger>
              <AccordionContent>
                <p>Relaxation time ðŸŒž Listen to music or watch your favourite show together</p>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-7">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Additional Support Services</h3>
              </AccordionTrigger>
              <AccordionContent>
                <p>Facilitate a social activity for Margaret ðŸŒž Your local community cafe has an event View Event</p>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-8">
              <AccordionTrigger>
                <h3 className="text-lg font-bold">Local Resources in Brixton</h3>
              </AccordionTrigger>
              <AccordionContent>
                <p>Prepare and serve an afternoon tea and snack (fruit or yogurt) and administer medication</p>
              </AccordionContent>
            </AccordionItem>
          </Accordion>
        </section>
        <section className="p-4 bg-white border-t">
          <Card>
            <CardContent className="flex justify-between items-center">
              <div>
                <h3 className="text-lg font-bold">What did you think about this daily plan?</h3>
                <p>You can anytime give Eleanor some feedback and she will be happy to adjust your plan</p>
              </div>
              <Button className="bg-pink-500 text-white">Discuss plan with Eleanor</Button>
            </CardContent>
          </Card>
        </section>
      </main>
      </div>
    </div>
  )
}

function BellIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
      <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
    </svg>
  )
}


function BugIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 2 1.88 1.88" />
      <path d="M14.12 3.88 16 2" />
      <path d="M9 7.13v-1a3.003 3.003 0 1 1 6 0v1" />
      <path d="M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6" />
      <path d="M12 20v-9" />
      <path d="M6.53 9C4.6 8.8 3 7.1 3 5" />
      <path d="M6 13H2" />
      <path d="M3 21c0-2.1 1.7-3.9 3.8-4" />
      <path d="M20.97 5c0 2.1-1.6 3.8-3.5 4" />
      <path d="M22 13h-4" />
      <path d="M17.2 17c2.1.1 3.8 1.9 3.8 4" />
    </svg>
  )
}


function GanttChartIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M8 6h10" />
      <path d="M6 12h9" />
      <path d="M11 18h7" />
    </svg>
  )
}


function GroupIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 7V5c0-1.1.9-2 2-2h2" />
      <path d="M17 3h2c1.1 0 2 .9 2 2v2" />
      <path d="M21 17v2c0 1.1-.9 2-2 2h-2" />
      <path d="M7 21H5c-1.1 0-2-.9-2-2v-2" />
      <rect width="7" height="5" x="7" y="7" rx="1" />
      <rect width="7" height="5" x="10" y="12" rx="1" />
    </svg>
  )
}


function LayoutDashboardIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="7" height="9" x="3" y="3" rx="1" />
      <rect width="7" height="5" x="14" y="3" rx="1" />
      <rect width="7" height="9" x="14" y="12" rx="1" />
      <rect width="7" height="5" x="3" y="16" rx="1" />
    </svg>
  )
}


function LogInIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4" />
      <polyline points="10 17 15 12 10 7" />
      <line x1="15" x2="3" y1="12" y2="12" />
    </svg>
  )
}


function LogOutIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" />
      <polyline points="16 17 21 12 16 7" />
      <line x1="21" x2="9" y1="12" y2="12" />
    </svg>
  )
}


function ScalingIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" />
      <path d="M14 15H9v-5" />
      <path d="M16 3h5v5" />
      <path d="M21 3 9 15" />
    </svg>
  )
}


function SettingsIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}


function XIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
